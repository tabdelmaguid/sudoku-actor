package org.tabdelmaguid.sudoku_actor

case class TestPair(board: List[Byte], solution: List[Byte])

object TestBoards {
  val test1 = TestPair(
    List(1, 0, 0,   0, 0, 7,   0, 9, 0,
         0, 3, 0,   0, 2, 0,   0, 0, 8,
         0, 0, 9,   6, 0, 0,   5, 0, 0,

         0, 0, 5,   3, 0, 0,   9, 0, 0,
         0, 1, 0,   0, 8, 0,   0, 0, 2,
         6, 0, 0,   0, 0, 4,   0, 0, 0,

         3, 0, 0,   0, 0, 0,   0, 1, 0,
         0, 4, 0,   0, 0, 0,   0, 0, 7,
         0, 0, 7,   0, 0, 0,   3, 0, 0),

    List(1, 6, 2,   8, 5, 7,   4, 9, 3,
         5, 3, 4,   1, 2, 9,   6, 7, 8,
         7, 8, 9,   6, 4, 3,   5, 2, 1,

         4, 7, 5,   3, 1, 2,   9, 8, 6,
         9, 1, 3,   5, 8, 6,   7, 4, 2,
         6, 2, 8,   7, 9, 4,   1, 3, 5,

         3, 5, 6,   4, 7, 8,   2, 1, 9,
         2, 4, 1,   9, 3, 5,   8, 6, 7,
         8, 9, 7,   2, 6, 1,   3, 5, 4)
  )
  
  val test2 = TestPair(
    List(2, 0, 0,   0, 0, 0,   0, 6, 0,
         0, 0, 0,   0, 7, 5,   0, 3, 0,
         0, 4, 8,   0, 9, 0,   1, 0, 0,

         0, 0, 0,   3, 0, 0,   0, 0, 0,
         3, 0, 0,   0, 1, 0,   0, 0, 9,
         0, 0, 0,   0, 0, 8,   0, 0, 0,

         0, 0, 1,   0, 2, 0,   5, 7, 0,
         0, 8, 0,   7, 3, 0,   0, 0, 0,
         0, 9, 0,   0, 0, 0,   0, 0, 4),

    List(2, 7, 3,   4, 8, 1,   9, 6, 5,
         9, 1, 6,   2, 7, 5,   4, 3, 8,
         5, 4, 8,   6, 9, 3,   1, 2, 7,

         8, 5, 9,   3, 4, 7,   6, 1, 2,
         3, 6, 7,   5, 1, 2,   8, 4, 9,
         1, 2, 4,   9, 6, 8,   7, 5, 3,

         4, 3, 1,   8, 2, 9,   5, 7, 6,
         6, 8, 5,   7, 3, 4,   2, 9, 1,
         7, 9, 2,   1, 5, 6,   3, 8, 4),
  )

  val test3 = TestPair(
    List(3, 0, 9,   0, 0, 7,   0, 6, 0,
         0, 5, 4,   0, 0, 1,   0, 0, 8,
         2, 7, 0,   0, 0, 0,   9, 0, 0,

         0, 0, 0,   0, 1, 0,   0, 4, 6,
         0, 0, 0,   6, 0, 3,   0, 0, 0,
         9, 4, 0,   0, 2, 0,   0, 0, 0,

         0, 0, 5,   0, 0, 0,   0, 8, 4,
         1, 0, 0,   4, 0, 0,   5, 2, 0,
         0, 6, 0,   5, 0, 0,   1, 0, 9),

    List(3, 8, 9,   2, 5, 7,   4, 6, 1,
         6, 5, 4,   3, 9, 1,   2, 7, 8,
         2, 7, 1,   8, 6, 4,   9, 5, 3,

         8, 3, 2,   9, 1, 5,   7, 4, 6,
         5, 1, 7,   6, 4, 3,   8, 9, 2,
         9, 4, 6,   7, 2, 8,   3, 1, 5,

         7, 2, 5,   1, 3, 9,   6, 8, 4,
         1, 9, 3,   4, 8, 6,   5, 2, 7,
         4, 6, 8,   5, 7, 2,   1, 3, 9)
  )

}
